components:
  comp-init-artifacts:
    executorLabel: exec-init-artifacts
    inputDefinitions:
      parameters:
        config_path:
          parameterType: STRING
        dataset_path:
          parameterType: STRING
        version:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        train_config:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        train_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-init-artifacts:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - init_artifacts
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-beta.4'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef init_artifacts(\n    config_path: str,\n    dataset_path: str,\n\
          \    version: Optional[str],\n    train_config: Output[Artifact],\n    train_dataset:\
          \ Output[Dataset],\n) -> None:\n\n    import logging\n\n    logging.info(\"\
          dataset.path:\"+train_dataset.path)\n    logging.info(train_dataset.metadata)\n\
          \    logging.info(\"config.path:\"+train_config.path)\n    logging.info(train_config.metadata)\n\
          \n    train_config.metadata = {\"version\":version, \"local_path\":config_path}\n\
          \    train_dataset.metadata= {\"version\":version, \"local_path\":dataset_path}\n\
          \n    import os\n    os.system(\"printenv\")\n\n"
        image: python:3.7
pipelineInfo:
  name: init-artifacts
root:
  dag:
    tasks:
      init-artifacts:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-init-artifacts
        inputs:
          parameters:
            config_path:
              componentInputParameter: config_path
            dataset_path:
              componentInputParameter: dataset_path
            version:
              componentInputParameter: version
        taskInfo:
          name: init-artifacts
  inputDefinitions:
    parameters:
      config_path:
        parameterType: STRING
      dataset_path:
        parameterType: STRING
      version:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.0.0-beta.4
