name: Init artifacts
inputs:
- {name: config_file_url, type: String}
- {name: dataset_path, type: String}
- {name: bucket_name, type: String}
- {name: version, type: String}
outputs:
- {name: config, type: Artifact}
- {name: dataset, type: Dataset}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==1.8.13' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      import kfp
      from kfp.v2 import dsl
      from kfp.v2.dsl import *
      from typing import *

      def init_artifacts(
          config_file_url: str,
          dataset_path: str,
          bucket_name: str,
          version: Optional[str]
      )->NamedTuple(
        'ExampleOutputs',[
          ('config', Artifact),
          ('dataset', Dataset)]
      ):

          config = Artifact(name="train_config", uri=config_file_url)
          dataset = Dataset(name="train_dataset", uri=dataset_path)

          from collections import namedtuple
          _output = namedtuple(
            'InitArtifacts',['config', 'dataset'])

          return _output(config=config, dataset=dataset)

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - init_artifacts
