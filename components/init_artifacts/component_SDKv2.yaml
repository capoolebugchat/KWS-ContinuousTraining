name: Init artifacts
inputs:
- {name: config_path, type: String}
- {name: dataset_path, type: String}
- {name: version, type: String}
outputs:
- {name: train_config, type: Artifact}
- {name: train_dataset, type: Dataset}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - (python3 -m ensurepip || python3 -m ensurepip --user) && (PIP_DISABLE_PIP_VERSION_CHECK=1
      python3 -m pip install --quiet                 --no-warn-script-location 'kfp==1.8.3'
      || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet                 --no-warn-script-location
      'kfp==1.8.3' --user) && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      from kfp.v2.dsl import *
      from typing import *

      def init_artifacts(
          config_path: str,
          dataset_path: str,
          version: Optional[str],
          train_config: Output[Artifact],
          train_dataset: Output[Dataset],
      ) -> None:

          train_config.metadata = {"version":version, "local_path":config_path}
          train_dataset.metadata= {"version":version, "local_path":dataset_path}

          import os
          os.system("printenv")

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - init_artifacts
