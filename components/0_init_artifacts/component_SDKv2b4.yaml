apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: init-artifacts-2-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.13, pipelines.kubeflow.org/pipeline_compilation_time: '2022-09-08T15:13:09.549420',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Init artifacts", "inputs":
      [{"name": "config_path", "type": "String"}, {"name": "dataset_path", "type":
      "String"}, {"name": "version", "type": "String"}], "name": "Init artifacts"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.13}
spec:
  entrypoint: init-artifacts-2
  templates:
  - name: init-artifacts
    container:
      args: [--executor_input, '{{$}}', --function_to_execute, init_artifacts]
      command:
      - sh
      - -c
      - |2

        if ! [ -x "$(command -v pip)" ]; then
            python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
        fi

        PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==1.8.13' && "$0" "$@"
      - sh
      - -ec
      - |
        program_path=$(mktemp -d)
        printf "%s" "$0" > "$program_path/ephemeral_component.py"
        python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
      - |2+

        import kfp
        from kfp.v2 import dsl
        from kfp.v2.dsl import *
        from typing import *

        def init_artifacts(
            config_path: str,
            dataset_path: str,
            version: Optional[str],
            train_config: Output[Artifact],
            train_dataset: Output[Dataset],
        ) -> None:

            import logging

            logging.info("dataset.path:"+train_dataset.path)
            logging.info(train_dataset.metadata)
            logging.info("config.path:"+train_config.path)
            logging.info(train_config.metadata)

            train_config.metadata = {"version":version, "local_path":config_path}
            train_dataset.metadata= {"version":version, "local_path":dataset_path}

            import os
            os.system("printenv")

      image: python:3.7
    inputs:
      artifacts:
      - {name: config_path, path: /tmp/inputs/config_path/data}
      - {name: dataset_path, path: /tmp/inputs/dataset_path/data}
      - {name: version, path: /tmp/inputs/version/data}
    outputs:
      artifacts:
      - {name: init-artifacts-train_config, path: /tmp/outputs/train_config/data}
      - {name: init-artifacts-train_dataset, path: /tmp/outputs/train_dataset/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.13
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"implementation": {"container":
          {"args": ["--executor_input", {"executorInput": null}, "--function_to_execute",
          "init_artifacts"], "command": ["sh", "-c", "\nif ! [ -x \"$(command -v pip)\"
          ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get
          install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip
          install --quiet     --no-warn-script-location ''kfp==1.8.13'' && \"$0\"
          \"$@\"\n", "sh", "-ec", "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\"
          > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
          "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing
          import *\n\ndef init_artifacts(\n    config_path: str,\n    dataset_path:
          str,\n    version: Optional[str],\n    train_config: Output[Artifact],\n    train_dataset:
          Output[Dataset],\n) -> None:\n\n    import logging\n\n    logging.info(\"dataset.path:\"+train_dataset.path)\n    logging.info(train_dataset.metadata)\n    logging.info(\"config.path:\"+train_config.path)\n    logging.info(train_config.metadata)\n\n    train_config.metadata
          = {\"version\":version, \"local_path\":config_path}\n    train_dataset.metadata=
          {\"version\":version, \"local_path\":dataset_path}\n\n    import os\n    os.system(\"printenv\")\n\n"],
          "image": "python:3.7"}}, "inputs": [{"name": "config_path", "type": "String"},
          {"name": "dataset_path", "type": "String"}, {"name": "version", "type":
          "String"}], "name": "Init artifacts", "outputs": [{"name": "train_config",
          "type": "Artifact"}, {"name": "train_dataset", "type": "Dataset"}]}', pipelines.kubeflow.org/component_ref: '{}'}
  - name: init-artifacts-2
    inputs:
      artifacts:
      - {name: config_path}
      - {name: dataset_path}
      - {name: version}
    dag:
      tasks:
      - name: init-artifacts
        template: init-artifacts
        arguments:
          artifacts:
          - {name: config_path, from: '{{inputs.artifacts.config_path}}'}
          - {name: dataset_path, from: '{{inputs.artifacts.dataset_path}}'}
          - {name: version, from: '{{inputs.artifacts.version}}'}
  arguments:
    parameters:
    - {name: config_path}
    - {name: dataset_path}
    - {name: version}
    artifacts:
    - name: config_path
      raw: {data: '{{workflow.parameters.config_path}}'}
    - name: dataset_path
      raw: {data: '{{workflow.parameters.dataset_path}}'}
    - name: version
      raw: {data: '{{workflow.parameters.version}}'}
  serviceAccountName: pipeline-runner
